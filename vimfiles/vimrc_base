"
"
" Asher Mancinelli
" My vimrc base. See remappings, abbreviations, and my commenting
" plugin in the other files contained in this dir.
"
"
"       ashermancinelli@gmail.com
"       asher.mancinelli@pnnl.gov
"
"       github.com/ashermancinelli
"
"                    .                    
"    ##############..... ##############   
"    ##############......##############   
"      ##########..........##########     
"      ##########........##########       
"      ##########.......##########        
"      ##########.....##########..        
"      ##########....##########.....      
"    ..##########..##########.........    
"  ....##########.#########.............  
"    ..################JJJ............    
"      ################.............      
"      ##############.JJJ.JJJJJJJJJJ      
"      ############...JJ...JJ..JJ  JJ     
"      ##########....JJ...JJ..JJ  JJ      
"      ########......JJJ..JJJ JJJ JJJ     
"      ######    .........                
"                  .....                  
"                    .    

" The two must-have lines:
filetype plugin indent on
syntax on
let mapleader = '<c-j>'
set dictionary=/usr/share/dict/words
set updatetime=100

" A few essential plugins
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree'
Plug 'altercation/vim-colors-solarized'
Plug 'flazz/vim-colorschemes'
Plug 'chrisbra/unicode.vim'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'vim-scripts/OmniCppComplete'
Plug 'tpope/vim-surround'
Plug 'JamshedVesuna/vim-markdown-preview'
Plug 'rhysd/vim-clang-format'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/gv.vim'
Plug 'tpope/vim-obsession'
Plug 'mbbill/undotree'
Plug 'junegunn/goyo.vim'
Plug 'rust-lang/rust.vim'
Plug 'sainnhe/sonokai'
Plug 'ashermancinelli/ubuild'
Plug 'mileszs/ack'

call plug#end()

" Vim.org sourced plugins
source ~/.vim/autoclose.vim

" The rest of my configurations
source ~/.vim/remappings.vim
source ~/.vim/my_commenter.vim
source ~/.vim/ubuild.vim
set tags+=~/.vim/tags

set wildignore+=.git

" Highlight keywords from CUDA Runtime API
let g:cuda_runtime_api_highlight = 1
" Highlight keywords from CUDA Driver API
let g:cuda_driver_api_highlight = 1
" Highlight keywords from CUDA Thrust library
let g:cuda_thrust_highlight = 1
set colorcolumn=80

set omnifunc=syntaxcomplete#Complete

" OmniCppComplete
autocmd FileType cpp set omnifunc=omni#cpp#complete#Main
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
let OmniCpp_MayCompleteDot = 1 " autocomplete after .
let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
" also necessary for fixing LIBSTDC++ releated stuff
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD", "_GLIBCXX_STD_A", "_GLIBCXX_STD_C"]

" Vim markdown preview settings "
let vim_markdown_preview_browser='Google Chrome'

" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview

" set background=light
" colorscheme material
" colorscheme materialbox
" colorscheme minimalist
" colorscheme meta4
" colorscheme wolfpack
" colorscheme apprentice
colorscheme sonokai

" Enable transparency in vim
hi Normal guibg=NONE ctermbg=NONE

if has("gui_macvim")
  set transparency=20
  set guifont=Menlo-Regular:h20
  set lines=300 columns=200
endif

" Correctly set codes to italicize text
set t_ZH=[3m
set t_ZR=[23m

" Italicize comments
hi Comment cterm=italic

set wildmenu
set wildmode=longest,list


